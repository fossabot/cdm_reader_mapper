[build-system]
requires = [
  "setuptools>=45",
  "wheel",
  "setuptools_scm[toml]>=6.2"
]
build-backend = "setuptools.build_meta"

[project]
name = "cdm_reader_mapper"
description = "Comman Data Model reader and mapper toolbox"
readme = "README.rst"
requires-python = ">=3.9"
license = {file = "LICENSE"}
keywords = ["cdm_reader_mapper"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11"
]
dynamic = ["version", "dependencies"]

[project.scripts]
mdf_reader = "cdm_reader_mapper.cli:main"

[project.urls]
homepage = "https://cdm-reader-mapper.readthedocs.io"
documentation = "https://cdm-reader-mapper.readthedocs.io"
repository = "https://github.com/glamod/cdm_reader_mapper.git"
changelog = "https://cdm_reader_mapper.readthedocs.io/en/latest/history.html"

[tool.black]
target-version = ["py38"]

[tool.coverage.run]
relative_files = true
omit = ["tests/*.py"]

[tool.isort]
profile = "black"
py_version = 38
append_only = true

[tool.mypy]
exclude = "doc|flycheck"
files = "cdm_reader_mapper"
show_error_codes = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
  "pandas",
  "matplotlib",
  "pytest"
]
ignore_missing_imports = true

[tool.nbqa.md]
mdformat = true

[tool.pytest]
python_files = "test_*.py"
testpaths = ["./tests"]

[tool.rstcheck]
report_level = "WARNING"
ignore_roles = [
  "pull",
  "issue"
]
ignore_directives = [
  "ipython",
  "autodata",
  "autosummary"
]

[tool.ruff]
target-version = "py38"
builtins = ["ellipsis"]
exclude = [
  ".eggs",
  "doc"
]
# E402: module level import not at top of file
# E501: line too long - let black worry about that
# E731: do not assign a lambda expression, use a def
ignore = [
  "E203",
  "E402",
  "E501",
  "E731"
]
select = [
  # Pyflakes
  "F",
  # Pycodestyle
  "E",
  "W",
  # isort
  "I",
  # Pyupgrade
  "UP"
]

[tool.ruff.isort]
known-first-party = ["cdm_reader_mapper"]
known-third-party = [
  "matplotlib",
  "numpy",
  "pandas",
  "pkg_resources",
  "pytest",
  "setuptools",
  "sphinx_autosummary_accessors"
]

[tool.setuptools]
packages = ["cdm_reader_mapper"]

[tool.setuptools.dynamic]
dependencies = {file = "ci/requirements/requirements.txt"}

[tool.setuptools_scm]
fallback_version = "999"
write_to = "cdm_reader_mapper/_version.py"
write_to_template = '__version__ = "{version}"'
tag_regex = "^(?P<prefix>v)?(?P<version>[^\\+]+)(?P<suffix>.*)?$"
